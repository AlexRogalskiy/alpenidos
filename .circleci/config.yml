# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
#machine:
#  environment:
#    JAVA_HOME: /usr/lib/jvm/java-9-oracle
#dependencies:
#  pre:
#    - sudo add-apt-repository -y ppa:webupd8team/java; sudo apt-get update
#    - echo "oracle-java9-installer shared/accepted-oracle-license-v1-1 select true" | sudo debconf-set-selections
#    - echo "oracle-java9-installer shared/accepted-oracle-license-v1-1 seen true" | sudo debconf-set-selections
#    - sudo apt-get -y install oracle-java9-installer
#    - sudo apt-get install oracle-java9-set-default
#  java:
#    version: openjdk11
version: 2
jobs:
  build:
    parallelism: 2
#    machine: true
#    working_directory: ~/alpenidos-core
    environment:
      # Customize the JVM maximum heap limit
      _JAVA_OPTIONS: "-Xmx3g"
      MAVEN_OPTS: -Xmx3200m
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch
#      - image: circleci/postgres:12-alpine
#        environment:
#          POSTGRES_USER: postgres
#          POSTGRES_DB: circle_test
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Run build in parallel
          command: mvn -U -B -V --fail-at-end -Dfile.encoding=UTF-8 -DskipTests=true -Dmaven.javadoc.skip=true -DskipCheckStyle=true dependency:go-offline clean install -P update-sourcepath-for-lombok
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}
      # run tests!
      - run:
          name: Run tests in parallel
          command: mvn -U -B -V --fail-at-end -Dfile.encoding=UTF-8 -DskipTests=false -Dmaven.javadoc.skip=true -DskipCheckStyle=true dependency:go-offline clean install -P update-sourcepath-for-lombok
      - store_test_results:
          path: ./build/test-results
      - store_artifacts: # Upload test results for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: build/test-results/test
          when: always
#      - run:
#          name: Assemble JAR
#          command: |
#            # Skip this for other nodes
#            if [ "$CIRCLE_NODE_INDEX" == 0 ]; then
#              ./gradlew assemble
#            fi
#      # As the JAR was only assembled in the first build container, build/libs will be empty in all the other build containers.
#      - store_artifacts:
#          path: build/libs
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
#      - deploy:
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
